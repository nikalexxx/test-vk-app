{"version":3,"sources":["panels/Checkbox.js","panels/Basket.js","panels/Home.js","panels/Order.js","panels/Orders.js","panels/Place.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/4.png","img/2.png","img/check-symbol.svg","img/refresh-button.svg","img/burger.png","img/kfc.png","img/mcdac.png","img/sub.png"],"names":["Checkbox","checked","onToggle","className","onChange","type","alt","src","Check","defaultProps","isErrorTime","timeString","test","getSavedBasket","JSON","parse","localStorage","getItem","setParam","name","value","set","key","current","setItem","stringify","withRouter","match","params","areaId","itemId","foodAreas","order","basket","useState","faster","setFaster","time","setTime","selfService","setSelfService","area","filter","id","item","items","useMemo","foodIds","Set","foods","map","products","Object","values","has","result","reduce","count","parseInt","price","accounting","formatNumber","priceNumber","to","edit","image","description","onFocus","event","target","trim","onBlur","style","color","fontSize","Home","Fragment","link","keys","length","Order","history","setActiveOrder","onClick","setTimeout","push","Orders","orderStatuses","setFinishedOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","food","finishedOrders","refresh","Place","onIncrementPosition","onDecrementPosition","composition","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","setOrderStatuses","setOrder","path","exact","nextStatuses","render","routeProps","location","pathname","updatedOrder","nextOrderStatuses","status","serialized","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e8288174.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Checkbox.css';\nimport Check from '../img/check-symbol.svg';\n\n\nconst Checkbox = ({ checked, onToggle }) => {\n  return (\n    <div className=\"Checkbox\">\n      <input\n        checked={checked}\n        onChange={onToggle}\n        type=\"checkbox\"\n      />\n      <img\n        alt=\"custom checkbox logo\"\n        src={Check}\n      />\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  onToggle: () => {},\n};\n\nexport default Checkbox;\n","import './place.css';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { useMemo, useState } from 'react';\n\nimport Checkbox from './Checkbox';\nimport accounting from 'accounting';\nimport edit from '../img/edit.svg';\n\nconst isErrorTime = timeString => !/^\\d{2}:\\d{2}$/.test(timeString);\n\nconst getSavedBasket = () => (JSON.parse(localStorage.getItem('basket') || 'null') || {});\n\nconst setParam = (name, value, set, key) => {\n  set(value);\n  const current = getSavedBasket();\n  if (!(key in current)) {\n    current[key] = {};\n  }\n  current[key][name] = value;\n  localStorage.setItem('basket', JSON.stringify(current));\n}\n\nconst Basket = ({ match: { params: { areaId, itemId }}, foodAreas, order }) => {\n  const key = `${areaId}.${itemId}`;\n  const savedBasket = getSavedBasket();\n  const basket = savedBasket[key] || {};\n  const [ faster, setFaster ] = useState('faster' in basket ? basket.faster : true);\n  const [ time, setTime ] = useState('time' in basket ? basket.time : '');\n  const [ selfService, setSelfService ] = useState('selfService' in basket ? basket.selfService : false);\n\n\n  const params = {\n    setFaster: value => setParam('faster', value, setFaster, key),\n    setTime: value => setParam('time', value, setTime, key),\n    setSelfService: value => setParam('selfService', value, setSelfService, key)\n  };\n\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  const [ price, products, priceNumber ] = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const products = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      });\n\n    const result = products.reduce((result, value) => {\n        const { count, item } = value;\n\n        return result + parseInt(item.price) * parseInt(count);\n      }, 0);\n\n    return [ accounting.formatNumber(result, 0, ' '), products, result ];\n  }, [ order, item ]);\n\n  return (\n    <div className=\"Place\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__products-wrapper\">\n        <ul className=\"Place__products\">\n          {products.map(({ item, count }) => (\n            <li\n              className=\"Place__product\"\n              key={item.id}\n            >\n              <img\n                className=\"Place__product-logo\"\n                alt=\"Ordered product logo\"\n                src={item.image}\n              />\n              <h3\n                className=\"Place__product-name\"\n              >\n                {item.name}\n              </h3>\n              <p\n                className=\"Place__product-price\"\n              >\n                Цена: {item.price}\n              </p>\n              <p\n                className=\"Place__product-count\"\n              >\n                x{count}\n              </p>\n            </li>\n          ))}\n        </ul>\n        <Link\n          className=\"Place__change-product\"\n          to={`/place/${areaId}/${itemId}`}\n        >\n          Изменить\n        </Link>\n      </div>\n      <div className=\"Place__choice\">\n        <h3>Время:</h3>\n        <div className=\"Place__choice-item\">\n          <span>Как можно быстрее</span>\n          <Checkbox \n            checked={faster} \n            onToggle={() => {\n              if (faster) {\n                params.setFaster(false);\n              } else {\n                params.setTime('');\n                params.setFaster(true);\n              }\n            }}\n          />\n        </div>\n        <div className=\"Place__choice-item\">\n          <span>Назначить</span>\n          <input\n            value={time}\n            type=\"time\"\n            onFocus={() => {\n              params.setFaster(false);\n            }}\n            onChange={event => {\n              params.setFaster(false);\n              const value = event.target.value.trim();\n              params.setTime(value);\n            }}\n            onBlur={() => {\n              if (time) {\n                params.setFaster(false);\n              }\n            }}\n          />\n          {isErrorTime(time) && !faster &&\n          <div style={{color: 'red', fontSize: '.8em'}}>Введите время в формате hh:mm</div>\n          }\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>С собой</h3>\n          <Checkbox checked={selfService} onToggle={() => params.setSelfService(!selfService)} />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>На месте</h3>\n          <Checkbox checked={!selfService} onToggle={() => params.setSelfService(!selfService)} />\n        </div>\n      </div>\n      <footer className=\"Place__footer\">\n        {priceNumber > 0 && (!isErrorTime(time) || faster) &&\n        <Link to={`/order/${area.id}/${item.id}`} className=\"Place__order\">\n          Оплатить {price}\n        </Link>}\n      </footer>\n    </div>\n  );\n};\n\nexport default withRouter(Basket);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './Home.css';\n\nconst Home = ({ foodAreas, order }) => (\n  <React.Fragment>\n    <ul className=\"Home\">\n      {foodAreas.map((area) => (\n        <li\n          key={area.id}\n        >\n          <div className=\"Home__fixed-content\">\n            <header className=\"Home__header\">\n              <h1 className=\"Home__head\">\n                <Link to=\"/\" className=\"Home__logo\">\n                  {area.name}\n                </Link>\n              </h1>\n              <Link to=\"/\" className=\"Home__change-tz\">\n                <img\n                  className=\"Home__edit\"\n                  alt=\"change-profile\"\n                  src={edit}\n                />\n              </Link>\n            </header>\n            <ul className=\"Home__tabs\">\n              <li className=\"Home__tab Home__tab_active\">\n                Еда\n              </li>\n              {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n            </ul>\n          </div>\n          <ul className=\"Home__items\">\n            {area.items.map(item => (\n              <li\n                className=\"Home__item\"\n                key={item.id}\n              >\n                <Link\n                  className=\"Home__food-link\"\n                  to={item.link}\n                >\n                  <img\n                    alt={item.name}\n                    className=\"Home__image\"\n                    src={item.image}\n                  />\n                  <h3 className=\"Home__food-name\">\n                    {item.name}\n                  </h3>\n                  <p className=\"Home__food-type\">{item.description}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n    {Object.keys(order).length !== 0 && (\n      <footer className=\"Footer\">\n        <Link to=\"/orders\" className=\"Footer__orders\">\n\t\t\t\t\tМои заказы\n        </Link>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nHome.propTypes = {\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  })),\n};\n\nHome.defaultProps = {\n  foodAreas: [],\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  return (\n    <div className=\"Place Place_order\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__order-body\">\n        <h3 className=\"Place__order-number-header\">\n          Номер вашего заказа\n        </h3>\n        <main className=\"Place__order-number\">\n          7\n        </main>\n        <p className=\"Place__order-number-header\">\n          Заказ будет готов через\n        </p>\n        <h3 className=\"Place__order-time\">\n          ~ 15 минут\n        </h3>\n      </div>\n      <footer className=\"Place__footer\">\n        <div \n          to=\"/orders\" \n          className=\"Place__order\"\n          onClick={() => {\n            setActiveOrder({ itemId });\n\n            setTimeout(() => {\n              history.push('/orders');\n            }, 0);\n          }}\n        >\n          Мои заказы\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nOrder.defaultProps = {\n  setActiveOrder: () => {},\n};\n\nexport default withRouter(Order);\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({ order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder }) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  return (\n    <div className=\"Orders\">\n      <ul className=\"Orders__active-orders\">\n        {activeOrders.map(order => (\n          <li\n            className=\"Orders__active-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <div className=\"Orders__time\">\n              ~ 15 М\n            </div>\n            <Link\n              className=\"Orders__change\"\n              to={`/place/${order.placeId}/${order.shopId}`}\n            >\n              Изм\n            </Link>\n            <button\n              className=\"Orders__cancel\"\n              onClick={() => {\n                setFinishedOrder({ itemId: order.shopId });\n              }}\n            >\n              Отм.\n            </button>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"Orders__finished-orders\">\n        {finishedOrders.map(order => (\n          <li\n            className=\"Orders__finished-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <button\n              className=\"Orders__repeat\"\n              onClick={() => {\n                setActiveOrder({ itemId: order.shopId });\n              }}\n            >\n              <img\n                className=\"Orders__refresh\"\n                alt=\"repeat order\"\n                src={refresh}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {},\n};\n\nexport default Orders;\n","import './place.css';\n\nimport React, { useMemo } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport accounting from 'accounting';\nimport edit from '../img/edit.svg';\n\n// import PropTypes from 'prop-types';\n\n\n\nconst Place = ({ item, order, onIncrementPosition, onDecrementPosition, area }) => {\n  const [price, priceNumber] = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const result = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      })\n      .reduce((result, value) => {\n        const { count, item: { price }} = value;\n\n        return result + parseInt(price) * parseInt(count);\n      }, 0);\n\n    return [accounting.formatNumber(result, 0, ' '), result];\n  }, [ order, item ]);\n\n  return (\n    <div className=\"Place\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n          <img\n            alt=\"change-profile\"\n            src={edit}\n          />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <ul className=\"Place__foods\">\n        {item.foods.map((food => (\n          <li\n            className=\"Place__food\"\n            key={food.id}\n          >\n            <div className=\"Place__food-logo-wrapper\">\n              <img\n                alt=\"food logo\"\n                className=\"Place__food-logo\"\n                src={food.image}\n              />\n            </div>\n            <h3 className=\"Place__food-name\">\n              {food.name}\n            </h3>\n            <p className=\"Place__food-composition\">\n              {food.composition}\n            </p>\n            <div className=\"Place__food-price\">\n              <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\n              <button\n                className=\"Place__food-button\"\n                onClick={() => {\n                  onDecrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                }}\n              >\n                -\n              </button>\n              <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\n              <button\n                className=\"Place__food-button\"\n                onClick={() => {\n                  onIncrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                }}\n              >\n                +\n              </button>\n            </div>\n          </li>\n        )))}\n      </ul>\n      <footer className=\"Place__footer\">\n        {priceNumber > 0 &&\n        <Link to={`/basket/${area.id}/${item.id}`} className=\"Place__order\">\n          Оформить заказ ({price})\n        </Link>}\n      </footer>\n    </div>\n  );\n};\n\nPlace.defaultProps = {\n  item: {},\n  onIncrementPosition: () => {},\n  onDecrementPosition: () => {},\n};\n\nexport default Place;\n","import './panels/App.css';\n\nimport React, { useState } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport Basket from './panels/Basket';\nimport FourTowar from './img/4.png';\nimport Home from './panels/Home';\nimport OneTowar from './img/1.png';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\nimport Place from './panels/Place';\nimport ThreeTowar from './img/3.png';\nimport TwoTowar from './img/2.png';\nimport burger from './img/burger.png';\nimport kfc from './img/kfc.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\n\nconst FOOD_AREAS = [{\n\tid: 'pizikiva-gallery',\n\tname: 'ТРЦ \"Им.Пыжикова\"',\n\titems: [{\n\t\tid: 'kfc',\n\t\tname: 'KFC',\n\t\tlink: '/place/pizikiva-gallery/kfc',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: kfc,\n\t\tfoods: [{\n\t\t\tid: 'classic',\n\t\t\timage: FourTowar,\n\t\t\tname: 'Классик',\n\t\t\tprice: 150,\n\t\t}, {\n\t\t\tid: 'fries',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Картофель фри',\n\t\t\tprice: 50,\n\t\t}],\n\t}, {\n\t\tid: 'burger-king',\n\t\tname: 'Burger King',\n\t\tlink: '/place/pizikiva-gallery/burger-king',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: burger,\n\t\tfoods: [{\n\t\t\tid: 'OneTowar',\n\t\t\tname: 'Товар № 1',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 630,\n\t\t\timage: OneTowar,\n\t\t}, {\n\t\t\tid: 'TwoTowar',\n\t\t\tname: 'Товар № 2',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 450,\n\t\t\timage: TwoTowar,\n\t\t}, {\n\t\t\tid: 'ThreeTowar',\n\t\t\tname: 'Товар № 3',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 800,\n\t\t\timage: ThreeTowar,\n\t\t}, {\n\t\t\tid: 'FourthTowar',\n\t\t\tname: 'Товар № 4',\n\t\t\tcomposition: 'Состав по ГОСТу',\n\t\t\tprice: 600,\n\t\t\timage: FourTowar,\n\t\t}],\n\t}, {\n\t\tid: 'macdac',\n\t\tname: 'McDonal\\'s',\n\t\tlink: '/place/pizikiva-gallery/macdac',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: mcdac,\n\t\tfoods: [{\n\t\t\tid: 'hamburger',\n\t\t\timage: TwoTowar,\n\t\t\tname: 'Гамбургер',\n\t\t\tprice: 50,\n\t\t}, {\n\t\t\tid: 'bigmac',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Биг мак',\n\t\t\tprice: 200,\n\t\t}],\n\t}, {\n\t\tid: 'subway',\n\t\tname: 'SubWay',\n\t\tlink: '/place/pizikiva-gallery/subway',\n\t\timage: sub,\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\tfoods: [{\n\t\t\tid: 'melt-sub',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Сабвей мелт',\n\t\t\tprice: 300,\n\t\t}, {\n\t\t\tid: 'day-sub',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Саб дня',\n\t\t\tprice: 200,\n\t\t}],\n\t}],\n}];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\tresult[item.link] = item;\n\t});\n\n\treturn result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\titem.foods.forEach(food => {\n\t\t\tresult[food.id] = food;\n\t\t});\n\t});\n\n\treturn result;\n}, {});\n\nconst App = () => {\n\tconst [ orderStatuses, setOrderStatuses ] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\n\tconst [ order, setOrder ] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Home foodAreas={FOOD_AREAS} order={order} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/order/:areaId/:itemId\" exact>\n\t\t\t\t\t<Order\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/basket/:areaId/:itemId\" exact>\n\t\t\t\t\t<Basket\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/orders\"\n\t\t\t\t\texact\n\t\t\t\t>\n\t\t\t\t\t<Orders \n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderStatuses={orderStatuses}\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\tsetFinishedOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'CANCELED';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route \n\t\t\t\t\tpath=\"/place/:area/:place\"\n\t\t\t\t\trender={routeProps => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Place\n\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\titem={placesMap[routeProps.location.pathname]}\n\t\t\t\t\t\t\t\tarea={FOOD_AREAS[0]}\n\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\tonIncrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count++;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id] = {\n\t\t\t\t\t\t\t\t\t\t\titem: foodsMap[id],\n\t\t\t\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDecrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tif (updatedOrder[id].count === 1) {\n\t\t\t\t\t\t\t\t\t\t\tdelete updatedOrder[id];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/edit.751f84c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.06277842.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.1198ed41.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}